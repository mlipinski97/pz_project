@startuml

title __LOG's Class Diagram__\n

  namespace com.mysql.cj {
    namespace log {
      class com.mysql.cj.log.BaseMetricsHolder {
          {static} - HISTOGRAM_BUCKETS : int
          - longestQueryTimeMs : long
          - maximumNumberTablesAccessed : long
          - minimumNumberTablesAccessed : long
          - numTablesMetricsHistBreakpoints : long[]
          - numTablesMetricsHistCounts : int[]
          - numberOfPreparedExecutes : long
          - numberOfPrepares : long
          - numberOfQueriesIssued : long
          - numberOfResultSetsCreated : long
          - oldHistBreakpoints : long[]
          - oldHistCounts : int[]
          - perfMetricsHistBreakpoints : long[]
          - perfMetricsHistCounts : int[]
          - queryTimeCount : long
          - queryTimeMean : double
          - queryTimeSum : double
          - queryTimeSumSquares : double
          - shortestQueryTimeMs : long
          - totalQueryTimeMs : double
          + checkAbonormallyLongQuery()
          + incrementNumberOfPreparedExecutes()
          + incrementNumberOfPrepares()
          + incrementNumberOfResultSetsCreated()
          + registerQueryExecutionTime()
          + reportMetrics()
          + reportNumberOfTablesAccessed()
          + reportQueryTime()
          - addToHistogram()
          - addToPerformanceHistogram()
          - addToTablesAccessedHistogram()
          - checkAndCreatePerformanceHistogram()
          - checkAndCreateTablesAccessedHistogram()
          - createInitialHistogram()
          - repartitionHistogram()
          - repartitionPerformanceHistogram()
          - repartitionTablesAccessedHistogram()
      }
    }
  }
  

  namespace com.mysql.cj {
    namespace log {
      class com.mysql.cj.log.LogFactory {
          {static} + getLogger()
      }
    }
  }
  

  namespace com.mysql.cj {
    namespace log {
      class com.mysql.cj.log.LoggingProfilerEventHandler {
          - logger : Log
          + LoggingProfilerEventHandler()
          + consumeEvent()
          + destroy()
          + init()
          + processEvent()
      }
    }
  }
  

  namespace com.mysql.cj {
    namespace log {
      class com.mysql.cj.log.ProfilerEventImpl {
          - connectionId : long
          - database : String
          - durationUnits : String
          - eventCreationPointDesc : String
          - eventCreationTime : long
          - eventDuration : long
          - eventType : byte
          - hostName : String
          - message : String
          - resultSetId : int
          - statementId : int
          + ProfilerEventImpl()
          + getConnectionId()
          + getDatabase()
          + getDurationUnits()
          + getEventCreationPointAsString()
          + getEventCreationTime()
          + getEventDuration()
          + getEventType()
          + getHostName()
          + getMessage()
          + getResultSetId()
          + getStatementId()
          + pack()
          + toString()
          {static} + unpack()
          - ProfilerEventImpl()
          {static} - readBytes()
          {static} - readInt()
          {static} - readLong()
          {static} - writeBytes()
          {static} - writeInt()
          {static} - writeLong()
      }
    }
  }
  

  com.mysql.cj.log.LoggingProfilerEventHandler .up.|> ProfilerEventHandler
  com.mysql.cj.log.ProfilerEventImpl .up.|> ProfilerEvent


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
